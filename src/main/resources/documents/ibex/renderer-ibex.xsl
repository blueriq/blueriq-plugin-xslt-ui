<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0" xmlns:fo="http://www.w3.org/1999/XSL/Format" xmlns:svg="http://www.w3.org/2000/svg" xmlns:ibex="http://www.xmlpdf.com/2003/ibex/Format" >

	<!-- 
	Author: 	M. Joosen (Everest)
	Date:		2011-01-11
	Description:	Specific functions for the ibex renderer

	Version history:
	20170127 1.8 P. Galanton	Added DYNAMIC_IMAGE
	20160516 1.6 B. Mihai		reverted Josen's chnges(disabled links due to pdfa bug)
	20151026 1.6 M. Joosen		disabled links due to pdfa bug
	20150824 1.7 V. Jansen		Set PDF/A conformance to PDF/A-1b / removed fixed date, let ibex generate it
	20110726 1.5 M. Joosen		Made backgroundimage a named template and allow links in processlinks
	20110717 1.4 M. Joosen		Adding BACKGROUNDIMAGE
	20110218 1.3 M. Joosen		Adding ProcessLink_IBEX and ANCHOR
	20110209 1.2 M. Joosen		Adding KeepTogether
	20110124 1.1 M. Joosen		Adding EmptyLines_IBEX
	20110111 1.0 M. Joosen		Creation 
	-->

	<xsl:template match="EMPTYLINE" mode="mode_IBEX">
		<fo:block space-before="1em">&#xa0;</fo:block>
	</xsl:template>

	<xsl:template match="IMAGE" mode="mode_IBEX">
		<xsl:attribute name="src">url(data:application/ibex-image,<xsl:value-of select="@name"/>)</xsl:attribute>
	</xsl:template>

	<xsl:template match="DYNAMIC_IMAGE" mode="mode_IBEX">
		<xsl:attribute name="src">url(data:application/ibex-image,<xsl:value-of select="@id"/>)</xsl:attribute>
	</xsl:template>

	<xsl:template name="Backgroundimage_IBEX">
		<xsl:attribute name="background-image">url(data:application/ibex-image,<xsl:value-of select="IMAGE/@name"/>)</xsl:attribute>
	</xsl:template>

	<xsl:template match="PDFA" mode="mode_IBEX">
		<ibex:pdfa>
			<xsl:attribute name="color-profile-name"><xsl:value-of select="$ColorSchemeLocation"/></xsl:attribute>
			<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1-702">
				<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
					<!-- PDFA ID -->
					<rdf:Description rdf:about="" xmlns:pdfaid="http://www.aiim.org/pdfa/ns/id/">
						<pdfaid:part>1</pdfaid:part>
						<pdfaid:conformance>B</pdfaid:conformance>
					</rdf:Description>
					<!-- PDF -->
					<rdf:Description rdf:about="" xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
						<pdf:Keywords>PDF/A</pdf:Keywords>
						<pdf:Producer>Aquima</pdf:Producer>
					</rdf:Description>
					<!-- dublin core -->
					<rdf:Description rdf:about="" xmlns:dc="http://purl.org/dc/elements/1.1/">
						<dc:format>application/pdf</dc:format>
						<dc:title>
							<rdf:Alt>
								<rdf:li xml:lang="x-default">
									<xsl:choose>
										<xsl:when test="DOCUMENTTITLE">
											<xsl:apply-templates select="DOCUMENTTITLE/TEXT/T/*"/>
										</xsl:when>
										<xsl:otherwise>
											<xsl:text>Aquima generated document</xsl:text>
										</xsl:otherwise>
									</xsl:choose>
								</rdf:li>
							</rdf:Alt>
						</dc:title>
						<dc:creator>
							<rdf:Seq>
								<rdf:li>Aquima</rdf:li>
							</rdf:Seq>
						</dc:creator>
						<dc:description>
							<rdf:Alt>
								<rdf:li xml:lang="x-default">Document generated by Aquima</rdf:li>
							</rdf:Alt>
						</dc:description>
					</rdf:Description>
				</rdf:RDF>
			</x:xmpmeta>
		</ibex:pdfa>
	</xsl:template>

	<xsl:template match="SECURITY" mode="mode_IBEX">
		<ibex:security>
			<xsl:call-template name="SetSecurityPropertyIBEX">
				<xsl:with-param name="style" select="@style"/>
			</xsl:call-template>
		</ibex:security>
	</xsl:template>

	<xsl:template name="SetSecurityPropertyIBEX">
		<xsl:param name="style"/>
		<xsl:variable name="Command"   select="substring-before($style, '_')"/>
		<xsl:variable name="Value"     select="substring-before(substring-after($style, '_'),'_')"/>
		<xsl:variable name="Remainder" select="substring-after(substring-after($style, '_'),'_')"/>
		<xsl:choose>
			<xsl:when test="$Command='print'" >
				<xsl:attribute name="deny-print">true</xsl:attribute>
			</xsl:when>	
			<xsl:when test="$Command='extract'" >
				<xsl:attribute name="deny-extract">true</xsl:attribute>
			</xsl:when>	
			<xsl:when test="$Command='modify'" >
				<xsl:attribute name="deny-modify">true</xsl:attribute>
			</xsl:when>	
			<xsl:when test="$Command='owner'" >
				<xsl:attribute name="owner-password"><xsl:value-of select="$Value"/></xsl:attribute>
			</xsl:when>	
			<xsl:when test="$Command='user'" >
				<xsl:attribute name="owner-password"><xsl:value-of select="$Value"/></xsl:attribute>
			</xsl:when>	
			<xsl:otherwise/>
		</xsl:choose>
		<xsl:if test="string-length($Remainder)>0">
			<xsl:call-template name="SetSecurityPropertyIBEX">
				<xsl:with-param name="style" select="$Remainder"/>
			</xsl:call-template>
		</xsl:if>
	</xsl:template>

	<xsl:template match="TABLECELL" mode="mode_IBEX">
		<!-- JAVA trips over this one, therefore the slow recalculating bit
		<xsl:attribute name="text-align">from-table-column(text-align)</xsl:attribute>
		-->
		<xsl:variable name="cellnr" select="count(preceding-sibling::TABLECELL) + 1"/>
		<xsl:variable name="tablestyle" select="substring-after(ancestor::TABLE[1]/@style,'cols_')"/>
		<xsl:variable name="columnstyle">
			<xsl:call-template name="GetColumnStyle">
				<xsl:with-param name="nr" select="$cellnr"/>
				<xsl:with-param name="str" select="$tablestyle"/>
			</xsl:call-template>
		</xsl:variable>
		<xsl:variable name="value_align">
			<xsl:choose>
				<xsl:when test="contains($columnstyle, 'r')">right</xsl:when>
				<xsl:when test="contains($columnstyle, 'c')">center</xsl:when>
				<xsl:otherwise>left</xsl:otherwise>
			</xsl:choose>
		</xsl:variable>
		<xsl:attribute name="text-align"><xsl:value-of select="$value_align"/></xsl:attribute>
	</xsl:template>

	<xsl:template match="LIST|LISTCLOSINGSIGN" mode="mode_IBEX">
		<xsl:attribute name="width">100%</xsl:attribute>
		<xsl:attribute name="table-layout">auto</xsl:attribute>
	</xsl:template>

	<xsl:template name="EmptyLines_IBEX" >
		<fo:block>
			<fo:leader/><xsl:text>&#xa0;</xsl:text>
		</fo:block>
	</xsl:template>

	<xsl:template match="KEEPTOGETHER" mode="mode_IBEX">
		<fo:block keep-together="always">
			<xsl:apply-templates select="*"/>
		</fo:block>
	</xsl:template>
	
	<xsl:template name="ProcessLink_IBEX" >
		<xsl:param name="id"/>
		<xsl:param name="anchor"/>
		<xsl:param name="anchorname"/>
		<fo:wrapper>
			<xsl:attribute name="id"><xsl:value-of select="$id"/></xsl:attribute>
			<fo:basic-link>
				<xsl:attribute name="internal-destination"><xsl:value-of select="$anchorname"/></xsl:attribute>
				<xsl:value-of select="$anchor"/>
			</fo:basic-link>
		</fo:wrapper>
	</xsl:template>

	<xsl:template match="ANCHOR" mode="mode_IBEX">
		<xsl:variable name="anchorname">
			<xsl:call-template name="replaceCharsInString">
				<xsl:with-param name="stringIn" select="string(.//TEXT/T)"/>
				<xsl:with-param name="charsIn" select="' '"/>
				 <xsl:with-param name="charsOut" select="''"/>
			</xsl:call-template>
		</xsl:variable>
		<fo:block>
			<xsl:attribute name="id">
				<xsl:value-of select="concat('anchor_',$anchorname)" />
			</xsl:attribute>
		</fo:block>
	</xsl:template>
	
</xsl:stylesheet>
